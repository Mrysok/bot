
import java.io.*;
import java.nio.file.*;
import java.util.Arrays;


public class ClassBot{
	Boolean flag=true;// ???? ??? ????????
	String sayInReturn(String msg) throws Exception{//????? ??? ??????? ? ???-?????
		String say=msg,Saysbot=null;
		String content = new String(Files.readAllBytes(Paths.get("FileQ.txt"))); //????????? ?????? ??????? ?? ?????
		String[] G=content.toLowerCase().split("[ {,|.}?]+");//????? ?????? ?? ?????? ????? 
		String[] S=say.toLowerCase().split("[ {,|.}?]+");

		for(int i=0;i<S.length;i++){//???? ??? ???????? ?????? ? ???????
			for(int j=0;j<G.length;j++){
				flag = G[j].equals(S[i]);//????????? ???? ?????
				if(flag){//???????? ?? ???????????????? ?????
					j=j+1;
					Saysbot=G[j].replace("_", " ");//?????? ????????
					break;
				}else{
					Saysbot="? ?? ???? ??? ????????, ????? ????! ??? ??? \n"
							+ "????? ???? ???????? ?????? ???????? ????? ? ????? \n"
							+ "?????? '^' ?????? ?????. ????????: ????^?????. \n"
							+ "??? ?????? '??????' ????? ?????????? ???????.";
				}
			}
		}
		return Saysbot;
	}

	String IDontKnow(String msg) throws Exception{//????? ????????
		String Saysbot = msg;
		if(msg.equals("??????")){//???????? ?? ?????? ????????
			flag=true;
			return "??????, ????? ?????????.";}
		Saysbot=Saysbot.toLowerCase();//???????? ???????? ????? ? ?????? ???????
		Saysbot=Saysbot.replace(" ","_");
		Saysbot=Saysbot.replace("^"," ");
		String content = new String(Files.readAllBytes(Paths.get("FileQ.txt")));
		content=content+" "+Saysbot;//????????? ?????? ??????? ????????
		try(FileWriter writer = new FileWriter("FileQ.txt", false)) //?????? ? ????
        {
           
            writer.write(content);
          
        }
        catch(IOException ex){
             
            System.out.println(ex.getMessage());
        } 
		flag=true;
		return "????????! ????? ????????!";
	}
	
	Boolean getflag(){// ???????? ? main() ?????
		return flag;
	}

	String Simantika(String msg){
		String[] S=msg.toLowerCase().split("[ {,|.}?]+");
		String[] Simantika=msg.toLowerCase().split("[ {,|.}?]+");
		int qw=S.length;
		for(int i=0;i<qw;i++){
			for(int j=0;j<i;j++){
				if(S[i].equals(S[j])){
					qw--;
					for(int a=i;a<(S.length-1);a++){
						int f=a+1;
						S[a]=S[f];
					}
				}
			}
		}
		String[] G=new String[qw];
		System.arraycopy(S, 0, G, 0, qw);
		String str = Arrays.toString(G);
		int[][] vesa= new int[qw][qw];
		
		for(int i=0;i<Simantika.length;i++){
				for(int j=0;j<qw;j++){
						if(Simantika[i].equals(G[j])){
							
							if(i==0){
								for(int a=0;a<qw;a++){
									
									if(Simantika[i+1].equals(G[a])){
										vesa[a][j]=vesa[a][j]+2;	
									}
									
									if(Simantika[i+2].equals(G[a])){
										vesa[a][j]=vesa[a][j]+1;	
									}
								}
							}
							
							if(i==1){
								for(int a=0;a<qw;a++){
									
									if(Simantika[i-1].equals(G[a])){
										vesa[a][j]=vesa[a][j]+2;	
									}

									
									if(Simantika[i+1].equals(G[a])){
										vesa[a][j]=vesa[a][j]+2;	
									}
									
									if(Simantika[i+2].equals(G[a])){
										vesa[a][j]=vesa[a][j]+1;	
									}
								}
							}
							
							if(i>1&&i<Simantika.length-2){
								
								for(int a=0;a<qw;a++){
									
									if(Simantika[i-1].equals(G[a])){
										vesa[a][j]=vesa[a][j]+2;	
									}
									
									if(Simantika[i-2].equals(G[a])){
										vesa[a][j]=vesa[a][j]+1;	
									}
									
									if(Simantika[i+1].equals(G[a])){
										vesa[a][j]=vesa[a][j]+2;	
									}
									
									if(Simantika[i+2].equals(G[a])){
										vesa[a][j]=vesa[a][j]+1;	
									}
								}	
							}
							
							if(i==Simantika.length-2){
								for(int a=0;a<qw;a++){
									
									if(Simantika[i-1].equals(G[a])){
										vesa[a][j]=vesa[a][j]+2;	
									}
									
									if(Simantika[i-2].equals(G[a])){
										vesa[a][j]=vesa[a][j]+1;	
									}
									
									if(Simantika[i+1].equals(G[a])){
										vesa[a][j]=vesa[a][j]+2;	
									}
								}
							}
							if(i==Simantika.length-1){
								for(int a=0;a<qw;a++){
									
									if(Simantika[i-1].equals(G[a])){
										vesa[a][j]=vesa[a][j]+2;	
									}
									
									if(Simantika[i-2].equals(G[a])){
										vesa[a][j]=vesa[a][j]+1;	
									}
									
								}
							}
						}
						
				}
		}
		for(int i=0;i<qw;i++){
			for(int j=0;j<qw;j++){
				System.out.print(vesa[i][j]+" ");
			}
			System.out.print("\n");
		}
		/*for(int j=0;j<qw;j++){
			System.out.print(G[j]+"\n");
		}*/
		int result=0,x=0,y=0;
		for(int i=0;i<qw;i++){
			for(int j=0;j<qw;j++){
				if(vesa[i][j]>result){
				result=vesa[i][j];
				x=i;
				y=j;}
			}
		}
		
		for(int i=0;i<qw;i++){
			for(int j=0;j<qw;j++){
				
			}
		}
		System.out.print(result+" "+x+" "+y+" "+vesa[x][y]);
		return str;}
	
	}